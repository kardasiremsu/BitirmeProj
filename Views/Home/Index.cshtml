@using BitirmeProj.Data
@using BitirmeProj.Utilities
@using System.Security.Claims
@using BitirmeProj.Services;

@model IEnumerable<BitirmeProj.Models.JobListing>
@inject ApplicationDBContext _context // Inject ApplicationDBContext into the view

@{
    ViewData["Title"] = "Home Page";
    

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .dropdown {
            position: relative;
            display: inline-block;
        }


        .dropdown-menu {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 100px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

            .dropdown-menu a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: block;
            }

        .dropdown:hover .dropdown-menu {
            display: block;
        }

        .filter-section {
            background-color: #f2f2f2;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
        }


            .filter-section label {
                display: block;
                margin-bottom: 5px;
            }

        .order-section {
            margin-bottom: 20px;
        }

            .order-section button {
                margin-right: 10px;
            }

        .description-limit {
            max-height: 100px; /* Limit the height of the description */
            overflow: hidden; /* Hide overflow content */
        }

        .read-more-btn {
            color: blue; /* Blue color for clickable text */
            text-decoration: underline; /* Underline to indicate it's clickable */
            cursor: pointer; /* Show pointer cursor on hover */
        }

            .read-more-btn:hover {
                text-decoration: none; /* Remove underline on hover */
            }

        .job-details {
            overflow-x: hidden;
            /* Enable horizontal scrolling */
        }

            .job-details pre {
                margin-bottom: 5px; /* Add space between lines */
            }

        .job-card {
            margin: 20px;
        }
    </style>
</head>
<body>
    <main class="centered-content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="order-section">
                        <h3 class="text-center mb-4">Research Job</h3>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <section class="job-order">
                        <div class="dropdown">
                            <button class="btn btn-outline-primary dropdown-toggle" type="button" id="sortDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Sort By
                            </button>
                            <div class="dropdown-menu" aria-labelledby="sortDropdown">
                                <a class="btn btn-light" asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParam"]">
                                    Title
                                </a>
                                <a class="btn btn-light" asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParam"]">
                                    Date
                                </a>
                            </div>
                        </div>
                    </section>
                    <section class="filter-section">
                        <h4>Filter Jobs</h4>
                      



                        <form asp-action="Index" method="get">
                            <div class="form-group">
                                <label for="experienceLevel">Experience Level</label>
                                <select id="experienceLevel" class="form-select" name="experienceLevel">
                                    <option value="">Open this select menu</option>

                                    @foreach (var kvp in BitirmeProj.Utilities.JobApplicationOptions.ExperienceLevelOptions)
                                    {
                                        <option value="@kvp.Key">@kvp.Value</option>
                                    }
                                </select>
                            </div>

                   
                            <div class="form-group">

                                <label for="jobLocation">Job Location</label>
                                <select id="jobLocation" class="form-select mt-2" name="jobLocation">
                                    <option value="">Open this select menu</option>
                                    @foreach (var kvp in BitirmeProj.Utilities.JobApplicationOptions.JobLocationOptions)
                                    {
                                        <option value="@kvp.Key">@kvp.Value</option>
                                    }
                                </select>
                            </div>
       
                            <div class="form-group">
                                <label for="jobtype">Job Type</label>
                                <select id="jobtype" class="form-select" name="jobType">
                                    <option value="">Open this select menu</option>
                                    @foreach (var kvp in BitirmeProj.Utilities.JobApplicationOptions.JobTypeOptions)
                                    {
                                        <option value="@kvp.Key">@kvp.Value</option>
                                    }
                                </select>
                            </div>
                            <button type="submit" class="btn btn-secondary">Filter</button>
                        </form>
                        <br />
                      
                    </section>

                </div>

                <div class="col-md-9">
                    <div class="container">
                        <form asp-action="Index" method="get">
                            <div class="input-group mb-3">
                                <input type="text" class="form-control" placeholder="Search" name="searchTerm">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="submit">Search</button>
                                </div>
                            </div>

                        </form>
                   <!--

                    <div class="container">
                                            <form asp-action="Index" method="get" onsubmit="return false;">
                                                <div class="input-group mb-3">
                                                    <input type="text" class="form-control" placeholder="Search" name="searchTerm" id="searchInput">
                                                </div>
                                            </form>

                                            <script>
                                                document.getElementById("searchInput").addEventListener("input", function () {
                                                    this.form.submit(); // Submit the form whenever the input value changes
                                                });
                                            </script>




                   --> 
                    </div>
                     
                     
                        <div class="col-md-12">
                        <h5>@ViewData["TotalJobsCount"] jobs are found.</h5>
                        </div>

                        <div id="job-container">
    @Html.Partial("_JobListing", Model)
</div>

                    <div id="loading" style="display: none; text-align: center; padding: 20px;">
                        <img src="~/images/loading.gif" alt="Loading..." style="width: 60px; height: 60px;" />
                      
                    </div>
                    @section Scripts {
                        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                var page = 1;
                                var loading = false;

                                function loadMoreJobs() {
                                    if (loading) return;
                                    loading = true;
                                    $('#loading').show();

                                    setTimeout(function () { // Add a delay of 5 seconds (5000 milliseconds)
                                        $.ajax({
                                            url: '@Url.Action("Index", "Home")',
                                            data: {
                                                sortOrder: '@ViewData["TitleSortParam"]',
                                                searchTerm: '@ViewData["searchTerm"]',
                                                experienceLevel: '@ViewData["experienceLevel"]',
                                                jobLocation: '@ViewData["jobLocation"]',
                                                jobType: '@ViewData["jobType"]',
                                                page: page + 1,
                                                pageSize: 10
                                            },
                                            success: function (data) {
                                                if (data.trim().length > 0) {
                                                    $('#job-container').append(data);
                                                    page++;
                                                }
                                                $('#loading').hide();
                                                loading = false;
                                            },
                                            error: function () {
                                                $('#loading').hide();
                                                loading = false;
                                            }
                                        });
                                    }, 1000); // 5000 milliseconds = 5 seconds
                                }

                                $(window).scroll(function () {
                                    if ($(window).scrollTop() + $(window).height() >= $(document).height() - 100) {
                                        loadMoreJobs();
                                    }
                                });
                            });
                        </script>
                    }
                     
        <script>
            function applyJob(jobID) {
                
                document.getElementById("jobID").value = jobID;
                document.getElementById("applyForm").submit();
            }
        </script>
       
       
        <!-- Modal -->
        <div class="modal fade" id="jobDetailsModal" tabindex="-1" role="dialog" aria-labelledby="jobDetailsModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="jobDetailsModalLabel">Job Details</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- Job details will be inserted here -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="editJob()">Edit</button>
                        <button type="button" class="btn btn-success" onclick="applyJob()">Apply</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <script>
            document.querySelectorAll('.read-more-btn').forEach(function (btn) {
                btn.addEventListener('click', function () {
                    var details = this.parentElement.querySelector('.description-limit');
                    if (details.style.maxHeight === 'none' || details.style.maxHeight === '') {
                        // If description is expanded, collapse it
                        details.style.maxHeight = '100px'; // Limit height to 100px
                        this.textContent = 'Read More';
                    } else {
                        // If description is collapsed, expand it
                        details.style.maxHeight = 'none'; // Show all content
                        this.textContent = 'Read Less';
                    }
                });
            });
        </script>


        <script src="~/js/home.js" asp-append-version="true"></script>
        <script>

            function viewJobDetails(job) {
                console.log("log deneme");
                var applicationDeadlineDateOnly = new Date(job.applicationDeadline).toLocaleDateString();
                console.log("log deneme");
                // Construct the detailed job information
                var details = "<p><strong>Title:</strong> " + job.jobTitle + "</p>" +
                    "<p><strong>Location:</strong> " + getJobLocationText(job.jobLocation) + "</p>" +
                    "<p><strong>Type:</strong> " + getJobTypeText(job.jobType) + "</p>" +
                    "<p><strong>Application Deadline:</strong> " + applicationDeadlineDateOnly + "</p>" +
                    "<p><strong>Experience Level:</strong> " + getExperienceLevelText(job.experienceLevel) + "</p>" +
                    "<p><strong>Salary:</strong> " + job.salary + " " + getSalaryCurrencyText(job.salaryCurrency) + "</p>"

                // Update modal content with job details
                $('#jobDetailsModal .modal-body').html(details);

                // Show the modal
                $('#jobDetailsModal').modal('show');
            }

            function editJob(jobId) {
                // Redirect the user to the edit page with the jobId
                window.location.href = '/Job/Edit/' + jobId;
            }

           
            function getJobTypeText(jobType) {

                // Replace this with your actual logic to retrieve job type text from dictionary
                var jobTypeOptions = @Html.Raw(Json.Serialize(JobApplicationOptions.JobTypeOptions));
                return jobTypeOptions[jobType] || jobType;
            }
            function getExperienceLevelText(experienceLevel) {
                var experienceLevelOptions = @Html.Raw(Json.Serialize(JobApplicationOptions.ExperienceLevelOptions));
                return experienceLevelOptions[experienceLevel] || experienceLevel;
            }

            function getWorkPlaceTypeText(workPlaceType) {
                var workPlaceTypeOptions = @Html.Raw(Json.Serialize(JobApplicationOptions.WorkPlaceTypeOptions));
                return workPlaceTypeOptions[workPlaceType] || workPlaceType;
            }

            function getSalaryCurrencyText(salaryCurrency) {
                var salaryCurrencyOptions = @Html.Raw(Json.Serialize(JobApplicationOptions.SalaryCurrencyOptions));
                return salaryCurrencyOptions[salaryCurrency] || salaryCurrency;
            }
            function getJobLocationText(jobLocation) {
                var jobLocationOptions = @Html.Raw(Json.Serialize(JobApplicationOptions.JobLocationOptions));
                return jobLocationOptions[jobLocation] || jobLocation;
            }
        </script>
    </main>
</body>
</html>
@{
    var message = TempData["SuccessMessage"] ?? string.Empty;
}

<script type="text/javascript">
    var message = '@message';
    if (message)
        alert(message);
</script>