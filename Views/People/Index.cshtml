@model BitirmeProj.Models.UserProfileViewModel

@{
    ViewData["Title"] = "Profile";
}


    
    <style>
        /* Add custom CSS styles here */
        .profile-container {
            max-width: 800px;
            margin: 0 auto;
        }

        .profile-info {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
    }

        .profile-photo {
            width: 200px;
            height: 200px;
            border-radius: 50%;
            margin-right: 20px;
        }

        .profile-details {
            font-size: 18px;
        background-color: #EFE9E9;
        padding: 10px;
        border-radius: 5%;
    }

        .applications,
        .job-listings {
            display: flex;
            flex-wrap: wrap;
            margin-top: 20px;
        }

        .application,
        .job-listing {
            width: calc(50% - 10px);
            margin-right: 20px;
            margin-bottom: 20px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        
        .user-info-lists{
        background-color: #EFE9E9;
        margin-top: 15px;
        border-radius: 5%;
    }
    </style>



<div class="container profile-container">
    <div class="row">
        <div class="col-md-4">
            <img src="https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png" alt="Profile Photo" class="profile-photo">

        </div>
        <div class="col-md-8">
            <h2> @Model.User.FirstName  @Model.User.LastName</h2>
            <h4>   @Model.User.Institution - @Model.User.Title</h4>
           <div id="profileInfo">

                <button id="editProfileBtn" class="btn btn-light">Edit Profile</button>
                <br /><br />
            <div id="profileDetails" class="profile-details">

                <p><strong>Username:</strong> @Model.User.UserName</p>
                <p><strong>Email:</strong> @Model.User.Email</p>
              
                <p><strong>Gender:</strong> @(Model.User.Gender == 0 ? "Female" : "Male")</p>
               
                <p><strong>Phone:</strong> @Model.User.Phone</p>
                <p><strong>Address:</strong> @Model.User.Address</p>
                  
            </div>

                <div class="user-info-lists border p-3">
                    <h4 class="mb-4">Upload CV</h4>
                    <form method="post" enctype="multipart/form-data" action="/People/UploadCV">
                        <div class="form-group">
                            <label for="cvFile">Choose CV File:</label>
                            <input type="file" class="form-control-file" id="cvFile" name="cvFile" accept=".pdf,.doc,.docx" required>
                            <br /><small class="form-text text-muted">Please select a PDF, DOC, or DOCX file.</small>
                        </div>
                        <button class="btn btn-success" type="submit">Upload CV</button>
                    </form>

                    <h4 class="mt-5">Uploaded CVs</h4>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th scope="col">CV Name</th>
                                    <th scope="col">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var cv in Model.CV)
                                {
                                    <tr>
                                        <td>@cv.CVName</td>
                                        <td>
                                            <div class="btn-group" role="group" aria-label="CV actions">
                                                <a href="/cvs/@($"{cv.CVID}_{cv.CVName}")" class="btn btn-primary" download>Download</a>
                                                <form action="/People/DeleteCV" method="post">
                                                    <input type="hidden" name="CVID" value="@cv.CVID" />
                                                    <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this CV?')">Delete</button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <br />
                    </div>
               

                    <script>
                        function deleteCV(cvId) {
                            if (confirm("Are you sure you want to delete this CV?")) {
                                // Perform an AJAX request to delete the CV
                                fetch(`/cv/delete/${cvId}`, {
                                    method: 'DELETE'
                                })
                                    .then(response => {
                                        if (response.ok) {
                                            // Reload the page or update the UI as needed
                                            window.location.reload();
                                        } else {
                                            console.error('Failed to delete CV');
                                        }
                                    })
                                    .catch(error => console.error('Error:', error));
                            }
                        }
                    </script>
                    
                <p><strong>Job Application:</strong></p>

                  
                    @if (ViewBag.JobApplicationIds != null && ViewBag.JobApplicationIds.Count > 0)
                    {
                        <div class="row">
                            @foreach (var jobId in ViewBag.JobApplicationIds)
                            {
                                <div class="col-md-4 mb-4">
                                    <div class="card">
                                        <div class="card-body">
                                            <h5 class="card-title">Job Application ID: @jobId</h5>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p>No job applications found for this user.</p>
                    }
                <p><strong>Job Posted by the User:</strong> </p>
           
                    @if (ViewBag.UserJobs != null && ViewBag.UserJobs.Count > 0)
                    {
                        <div class="row">
                            @foreach (var job in ViewBag.UserJobs)
                            {
                                <div class="col-md-4 mb-4">
                                    <div class="card">
                                        <div class="card-body">
                                            <h5 class="card-title">@job.JobTitle</h5>
                                            <!-- Display other job details as needed -->
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p>No jobs posted by this user.</p>
                    }


                    <!-- Skills Form -->
                    <form method="post" action="/Profile/AddSkill" class="my-4">
                        <h5>Skills</h5>
                        <div class="form-group">
                            <label for="skillName">Skill Name:</label>
                            <input type="text" id="skillName" name="SkillName" class="form-control" placeholder="Enter Skill Name" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Add Skill</button>
                    </form>

                    <!-- Work Experience Form -->
                    <form method="post" action="/People/AddWorkExperience" class="my-4">
                        <h5>Work Experience</h5>
                        <div class="form-group">
                            <label for="companyName">Company Name:</label>
                            <input type="text" id="companyName" name="CompanyName" class="form-control" placeholder="Enter Company Name" required>
                        </div>
                        <div class="form-group">
                            <label for="position">Position:</label>
                            <input type="text" id="position" name="Position" class="form-control" placeholder="Enter Position" required>
                        </div>
                        <!-- Add other fields as needed -->
                        <button type="submit" class="btn btn-primary">Add Work Experience</button>
                    </form>

                    <!-- Languages Form -->
                    <form method="post" action="/People/AddLanguage" class="my-4">
                        <h5>Languages</h5>
                        <div class="form-group">
                            <label for="Name">Language Name:</label>
                            <input type="text" id="Name" name="Name" class="form-control" placeholder="Enter Language Name" required>
                        </div>
                        <div class="form-group">
                            <label for="proficiency">Proficiency:</label>
                            <input type="text" id="proficiency" name="Proficiency" class="form-control" placeholder="Enter Proficiency" required>
                        </div>
                        <!-- Add other fields as needed -->
                        <button type="submit" class="btn btn-primary">Add Language</button>
                    </form>

                    <!-- Schools Form -->
                    <form method="post" action="/Profile/AddSchool" class="my-4">
                        <h5>Education</h5>
                        <div class="form-group">
                            <label for="schoolName">School Name:</label>
                            <input type="text" id="schoolName" name="SchoolName" class="form-control" placeholder="Enter School Name" required>
                        </div>
                        <div class="form-group">
                            <label for="degree">Degree:</label>
                            <input type="text" id="degree" name="Degree" class="form-control" placeholder="Enter Degree" required>
                        </div>
                        <!-- Add other fields as needed -->
                        <button type="submit" class="btn btn-primary">Add School</button>
                    </form>

            </div>


            </div>
            <div id="editProfileForm" style="display: none;">
                <!-- Editable fields will be displayed here -->
                <form id="editForm">
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <label for="UserName">Username</label>
                        <input type="text" class="form-control" id="UserName" name="UserName" value="@Model.User.UserName" required>
                    </div>
                    <div class="form-group">
                        <label for="FirstName">First Name</label>
                        <input type="text" class="form-control" id="FirstName" name="FirstName" value="@Model.User.FirstName" required>
                    </div>

                    <div class="form-group">
                        <label for="LastName">Last Name</label>
                        <input type="text" class="form-control" id="LastName" name="LastName" value="@Model.User.LastName" required>
                    </div>

                    <div class="form-group">
                        <label for="Email">Email</label>
                        <input type="email" class="form-control" id="Email" name="Email" value="@Model.User.Email" required>
                    </div>


                     <div class="form-group">
            <label for="Gender">Gender</label>
            <select class="form-control" id="Gender" name="Gender" required>
                <option value="">Select Gender</option>
                <option value="0">Female</option>
                <option value="1">Male</option>
                <option value="2">Other</option>
            </select>
        </div>
                    <!-- Add other editable fields -->
                    <button id="cancelEditBtn" type="button" class="btn btn-secondary">Cancel</button>

                    <button id="saveProfileBtn" type="button" class="btn btn-primary">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Function to switch between view and edit mode
        function toggleEditMode(edit) {
            if (edit) {
                $('#profileInfo').hide();
                $('#editProfileForm').show();
            } else {
                $('#profileInfo').show();
                $('#editProfileForm').hide();
            }
        }

        // Initial state: Display profile details in read-only mode
        toggleEditMode(false);

        // Handle click event on Edit button
        $('#editProfileBtn').click(function () {
            toggleEditMode(true);
        });
        $('#cancelEditBtn').click(function () {
            // Reload the page to show the same profile
            location.reload();
        });
        // Handle click event on Save button
        $('#saveProfileBtn').click(function () {
            var formData = $('#editForm').serialize();
            $.ajax({
                url: '/People/Update',
                method: 'POST',
                data: formData,
                success: function () {
                    // If update is successful, switch back to view mode
                    toggleEditMode(false);
                },
                error: function () {
                    // Handle error if update fails
                    alert('Failed to update profile.');
                }
            });
        });
    </script>
}
        </div>

    </div>

</div>
<!--
    <h2>Applications</h2>
    <div class="applications">
        foreach (var application in Model.Applications)
        {
            <div class="application">
                <h3>application.JobTitle</h3>
                <p>Status: application.Status</p>
            </div>
        }
    </div>

    <h2>Job Listings</h2>
    <div class="job-listings">
        foreach (var jobListing in Model.JobListings)
        {
            <div class="job-listing">
                <h3>jobListing.Title</h3>
                <p>Location: jobListing.Location</p>
            </div>
        }
    </div>
    -->


<!--
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                Html.DisplayNameFor(model => model.Phone)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
foreach (var item in Model) {
        <tr>
            <td>
                Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="item.UserID">Edit</a> |
                    <a asp-action="Details" asp-route-id="item.UserID">Details</a> |
                    <a asp-action="Delete" asp-route-id="item.UserID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
-->